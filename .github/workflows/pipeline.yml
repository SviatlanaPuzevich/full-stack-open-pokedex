name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run eslint
      - name: build
        run: npx webpack --mode production
      - name: test
        run: npx jest
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
      - name: Run Playwright tests
        run: npx playwright test
#      - uses: actions/upload-artifact@v4
#        if: ${{ !cancelled() }}
#        with:
#          name: playwright-report
#          path: playwright-report/
#          retention-days: 30
  tag_release:
    if: ${{ github.event_name == 'push' }}
    needs: [ simple_deployment_pipeline ]
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Extract commit messages
        run: |
          MESSAGES="${{ join(github.event.commits.*.message, ' ') }}"
          CLEANED_MESSAGES="${MESSAGES//$'\n'/ }"
          echo "commit_messages=$CLEANED_MESSAGES" >> $GITHUB_ENV
      - name: Bump version and push tag
        if: ${{ !contains(env.commit_messages, '#skip') }}
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
      - name: Extract tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
  discord_notification:
    runs-on: ubuntu-latest
    needs: [ simple_deployment_pipeline, tag_release ]
    steps:
      - name: Send successes message in discord
        if: ${{ success() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          TIME=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          COMMIT_HASH="${{ github.sha }}"
          DESCRIPTION="**Commit**: \`${COMMIT_HASH}\`
          **Time**: ${TIME}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "$(jq -n \
              --arg username "CI/CD Github Bot" \
              --arg title "üéâ New version ${{ needs.tag_release.outputs.tag }} deployed successfully!" \
              --arg description "$DESCRIPTION" \
              --argjson color 65280 \
              '{
                username: $username,
                embeds: [
                  {
                    title: $title,
                    description: $description,
                    color: $color
                  }
                ]
              }')" \
            "$DISCORD_WEBHOOK"
      - name: Send failure message in discord
        if: ${{ failure() }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          TIME=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          COMMIT_HASH="${{ github.sha }}"
          DESCRIPTION="**Commit**: \`${COMMIT_HASH}\`
          **Time**: ${TIME}"
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "$(jq -n \
              --arg username "CI/CD Github Bot" \
              --arg title "‚ùå Build failed" \
              --arg description "$DESCRIPTION" \
              --argjson color 16711680 \
              '{
                username: $username,
                embeds: [
                  {
                    title: $title,
                    description: $description,
                    color: $color
                  }
                ]
              }')" \
            "$DISCORD_WEBHOOK"


